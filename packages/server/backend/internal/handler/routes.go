// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	example "github.com/zzopen/password-manager/backend/internal/handler/example"
	jwt "github.com/zzopen/password-manager/backend/internal/handler/jwt"
	secretbook "github.com/zzopen/password-manager/backend/internal/handler/secretbook"
	secretcategory "github.com/zzopen/password-manager/backend/internal/handler/secretcategory"
	"github.com/zzopen/password-manager/backend/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/token",
				Handler: jwt.TokenHandler(serverCtx),
			},
		},
		rest.WithPrefix("/jwt"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/t1",
				Handler: example.T1Handler(serverCtx),
			},
		},
		rest.WithPrefix("/example"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: secretbook.CreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: secretbook.DeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: secretbook.UpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: secretbook.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/detail",
				Handler: secretbook.DetailHandler(serverCtx),
			},
		},
		rest.WithPrefix("/secretbook"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: secretcategory.CreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: secretcategory.DeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: secretcategory.UpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/detail",
				Handler: secretcategory.DetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list",
				Handler: secretcategory.ListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/treeList",
				Handler: secretcategory.TreeListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/secretcategory"),
	)
}
