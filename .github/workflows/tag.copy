name: Build/release Electron app

on:
  push:
    tags:
      - v*.*.*

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21
          check-latest: true
          cache: true
        id: go

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Lint go
        run: |
          go vet -stdmethods=false $(go list ./...)

          go mod tidy
          if ! test -z "$(git status --porcelain)"; then
            echo "Please run 'go mod tidy'"
            exit 1
          fi

      - name: Install Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          cd ./packages/desktop
          pnpm install --frozen-lockfile

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd ./packages/backend/cli
          make build
          pnpm run build:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: pnpm run build:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: pnpm run build:win

      - name: release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
            dist/*.yml
            dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
